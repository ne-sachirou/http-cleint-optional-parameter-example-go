// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
)

func (s *ErrRespStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// ErrRespStatusCode wraps string with StatusCode.
type ErrRespStatusCode struct {
	StatusCode int
	Response   string
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrRespStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrRespStatusCode) GetResponse() string {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrRespStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrRespStatusCode) SetResponse(val string) {
	s.Response = val
}

type ExamplePostReq struct {
	Param1 int64    `json:"param1"`
	Param2 OptInt64 `json:"param2"`
}

// GetParam1 returns the value of Param1.
func (s *ExamplePostReq) GetParam1() int64 {
	return s.Param1
}

// GetParam2 returns the value of Param2.
func (s *ExamplePostReq) GetParam2() OptInt64 {
	return s.Param2
}

// SetParam1 sets the value of Param1.
func (s *ExamplePostReq) SetParam1(val int64) {
	s.Param1 = val
}

// SetParam2 sets the value of Param2.
func (s *ExamplePostReq) SetParam2(val OptInt64) {
	s.Param2 = val
}

// NewOptInt64 returns new OptInt64 with value set to v.
func NewOptInt64(v int64) OptInt64 {
	return OptInt64{
		Value: v,
		Set:   true,
	}
}

// OptInt64 is optional int64.
type OptInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptInt64 was set.
func (o OptInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}
