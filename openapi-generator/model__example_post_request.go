/*
example

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExamplePostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExamplePostRequest{}

// ExamplePostRequest struct for ExamplePostRequest
type ExamplePostRequest struct {
	Param1 int64 `json:"param1"`
	Param2 *int64 `json:"param2,omitempty"`
}

type _ExamplePostRequest ExamplePostRequest

// NewExamplePostRequest instantiates a new ExamplePostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExamplePostRequest(param1 int64) *ExamplePostRequest {
	this := ExamplePostRequest{}
	this.Param1 = param1
	return &this
}

// NewExamplePostRequestWithDefaults instantiates a new ExamplePostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExamplePostRequestWithDefaults() *ExamplePostRequest {
	this := ExamplePostRequest{}
	return &this
}

// GetParam1 returns the Param1 field value
func (o *ExamplePostRequest) GetParam1() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Param1
}

// GetParam1Ok returns a tuple with the Param1 field value
// and a boolean to check if the value has been set.
func (o *ExamplePostRequest) GetParam1Ok() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Param1, true
}

// SetParam1 sets field value
func (o *ExamplePostRequest) SetParam1(v int64) {
	o.Param1 = v
}

// GetParam2 returns the Param2 field value if set, zero value otherwise.
func (o *ExamplePostRequest) GetParam2() int64 {
	if o == nil || IsNil(o.Param2) {
		var ret int64
		return ret
	}
	return *o.Param2
}

// GetParam2Ok returns a tuple with the Param2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExamplePostRequest) GetParam2Ok() (*int64, bool) {
	if o == nil || IsNil(o.Param2) {
		return nil, false
	}
	return o.Param2, true
}

// HasParam2 returns a boolean if a field has been set.
func (o *ExamplePostRequest) HasParam2() bool {
	if o != nil && !IsNil(o.Param2) {
		return true
	}

	return false
}

// SetParam2 gets a reference to the given int64 and assigns it to the Param2 field.
func (o *ExamplePostRequest) SetParam2(v int64) {
	o.Param2 = &v
}

func (o ExamplePostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExamplePostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["param1"] = o.Param1
	if !IsNil(o.Param2) {
		toSerialize["param2"] = o.Param2
	}
	return toSerialize, nil
}

func (o *ExamplePostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"param1",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExamplePostRequest := _ExamplePostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExamplePostRequest)

	if err != nil {
		return err
	}

	*o = ExamplePostRequest(varExamplePostRequest)

	return err
}

type NullableExamplePostRequest struct {
	value *ExamplePostRequest
	isSet bool
}

func (v NullableExamplePostRequest) Get() *ExamplePostRequest {
	return v.value
}

func (v *NullableExamplePostRequest) Set(val *ExamplePostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableExamplePostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableExamplePostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExamplePostRequest(val *ExamplePostRequest) *NullableExamplePostRequest {
	return &NullableExamplePostRequest{value: val, isSet: true}
}

func (v NullableExamplePostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExamplePostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


